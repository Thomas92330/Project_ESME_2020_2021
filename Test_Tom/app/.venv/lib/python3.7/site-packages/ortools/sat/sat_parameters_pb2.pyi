# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class SatParameters(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    VariableOrderValue = typing___NewType('VariableOrderValue', builtin___int)
    type___VariableOrderValue = VariableOrderValue
    VariableOrder: _VariableOrder
    class _VariableOrder(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.VariableOrderValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        IN_ORDER = typing___cast(SatParameters.VariableOrderValue, 0)
        IN_REVERSE_ORDER = typing___cast(SatParameters.VariableOrderValue, 1)
        IN_RANDOM_ORDER = typing___cast(SatParameters.VariableOrderValue, 2)
    IN_ORDER = typing___cast(SatParameters.VariableOrderValue, 0)
    IN_REVERSE_ORDER = typing___cast(SatParameters.VariableOrderValue, 1)
    IN_RANDOM_ORDER = typing___cast(SatParameters.VariableOrderValue, 2)
    type___VariableOrder = VariableOrder

    PolarityValue = typing___NewType('PolarityValue', builtin___int)
    type___PolarityValue = PolarityValue
    Polarity: _Polarity
    class _Polarity(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.PolarityValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        POLARITY_TRUE = typing___cast(SatParameters.PolarityValue, 0)
        POLARITY_FALSE = typing___cast(SatParameters.PolarityValue, 1)
        POLARITY_RANDOM = typing___cast(SatParameters.PolarityValue, 2)
        POLARITY_WEIGHTED_SIGN = typing___cast(SatParameters.PolarityValue, 3)
        POLARITY_REVERSE_WEIGHTED_SIGN = typing___cast(SatParameters.PolarityValue, 4)
    POLARITY_TRUE = typing___cast(SatParameters.PolarityValue, 0)
    POLARITY_FALSE = typing___cast(SatParameters.PolarityValue, 1)
    POLARITY_RANDOM = typing___cast(SatParameters.PolarityValue, 2)
    POLARITY_WEIGHTED_SIGN = typing___cast(SatParameters.PolarityValue, 3)
    POLARITY_REVERSE_WEIGHTED_SIGN = typing___cast(SatParameters.PolarityValue, 4)
    type___Polarity = Polarity

    ConflictMinimizationAlgorithmValue = typing___NewType('ConflictMinimizationAlgorithmValue', builtin___int)
    type___ConflictMinimizationAlgorithmValue = ConflictMinimizationAlgorithmValue
    ConflictMinimizationAlgorithm: _ConflictMinimizationAlgorithm
    class _ConflictMinimizationAlgorithm(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.ConflictMinimizationAlgorithmValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NONE = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 0)
        SIMPLE = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 1)
        RECURSIVE = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 2)
        EXPERIMENTAL = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 3)
    NONE = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 0)
    SIMPLE = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 1)
    RECURSIVE = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 2)
    EXPERIMENTAL = typing___cast(SatParameters.ConflictMinimizationAlgorithmValue, 3)
    type___ConflictMinimizationAlgorithm = ConflictMinimizationAlgorithm

    BinaryMinizationAlgorithmValue = typing___NewType('BinaryMinizationAlgorithmValue', builtin___int)
    type___BinaryMinizationAlgorithmValue = BinaryMinizationAlgorithmValue
    BinaryMinizationAlgorithm: _BinaryMinizationAlgorithm
    class _BinaryMinizationAlgorithm(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.BinaryMinizationAlgorithmValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_BINARY_MINIMIZATION = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 0)
        BINARY_MINIMIZATION_FIRST = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 1)
        BINARY_MINIMIZATION_FIRST_WITH_TRANSITIVE_REDUCTION = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 4)
        BINARY_MINIMIZATION_WITH_REACHABILITY = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 2)
        EXPERIMENTAL_BINARY_MINIMIZATION = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 3)
    NO_BINARY_MINIMIZATION = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 0)
    BINARY_MINIMIZATION_FIRST = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 1)
    BINARY_MINIMIZATION_FIRST_WITH_TRANSITIVE_REDUCTION = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 4)
    BINARY_MINIMIZATION_WITH_REACHABILITY = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 2)
    EXPERIMENTAL_BINARY_MINIMIZATION = typing___cast(SatParameters.BinaryMinizationAlgorithmValue, 3)
    type___BinaryMinizationAlgorithm = BinaryMinizationAlgorithm

    ClauseProtectionValue = typing___NewType('ClauseProtectionValue', builtin___int)
    type___ClauseProtectionValue = ClauseProtectionValue
    ClauseProtection: _ClauseProtection
    class _ClauseProtection(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.ClauseProtectionValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PROTECTION_NONE = typing___cast(SatParameters.ClauseProtectionValue, 0)
        PROTECTION_ALWAYS = typing___cast(SatParameters.ClauseProtectionValue, 1)
        PROTECTION_LBD = typing___cast(SatParameters.ClauseProtectionValue, 2)
    PROTECTION_NONE = typing___cast(SatParameters.ClauseProtectionValue, 0)
    PROTECTION_ALWAYS = typing___cast(SatParameters.ClauseProtectionValue, 1)
    PROTECTION_LBD = typing___cast(SatParameters.ClauseProtectionValue, 2)
    type___ClauseProtection = ClauseProtection

    ClauseOrderingValue = typing___NewType('ClauseOrderingValue', builtin___int)
    type___ClauseOrderingValue = ClauseOrderingValue
    ClauseOrdering: _ClauseOrdering
    class _ClauseOrdering(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.ClauseOrderingValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CLAUSE_ACTIVITY = typing___cast(SatParameters.ClauseOrderingValue, 0)
        CLAUSE_LBD = typing___cast(SatParameters.ClauseOrderingValue, 1)
    CLAUSE_ACTIVITY = typing___cast(SatParameters.ClauseOrderingValue, 0)
    CLAUSE_LBD = typing___cast(SatParameters.ClauseOrderingValue, 1)
    type___ClauseOrdering = ClauseOrdering

    RestartAlgorithmValue = typing___NewType('RestartAlgorithmValue', builtin___int)
    type___RestartAlgorithmValue = RestartAlgorithmValue
    RestartAlgorithm: _RestartAlgorithm
    class _RestartAlgorithm(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.RestartAlgorithmValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 0)
        LUBY_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 1)
        DL_MOVING_AVERAGE_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 2)
        LBD_MOVING_AVERAGE_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 3)
        FIXED_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 4)
    NO_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 0)
    LUBY_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 1)
    DL_MOVING_AVERAGE_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 2)
    LBD_MOVING_AVERAGE_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 3)
    FIXED_RESTART = typing___cast(SatParameters.RestartAlgorithmValue, 4)
    type___RestartAlgorithm = RestartAlgorithm

    MaxSatAssumptionOrderValue = typing___NewType('MaxSatAssumptionOrderValue', builtin___int)
    type___MaxSatAssumptionOrderValue = MaxSatAssumptionOrderValue
    MaxSatAssumptionOrder: _MaxSatAssumptionOrder
    class _MaxSatAssumptionOrder(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.MaxSatAssumptionOrderValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DEFAULT_ASSUMPTION_ORDER = typing___cast(SatParameters.MaxSatAssumptionOrderValue, 0)
        ORDER_ASSUMPTION_BY_DEPTH = typing___cast(SatParameters.MaxSatAssumptionOrderValue, 1)
        ORDER_ASSUMPTION_BY_WEIGHT = typing___cast(SatParameters.MaxSatAssumptionOrderValue, 2)
    DEFAULT_ASSUMPTION_ORDER = typing___cast(SatParameters.MaxSatAssumptionOrderValue, 0)
    ORDER_ASSUMPTION_BY_DEPTH = typing___cast(SatParameters.MaxSatAssumptionOrderValue, 1)
    ORDER_ASSUMPTION_BY_WEIGHT = typing___cast(SatParameters.MaxSatAssumptionOrderValue, 2)
    type___MaxSatAssumptionOrder = MaxSatAssumptionOrder

    MaxSatStratificationAlgorithmValue = typing___NewType('MaxSatStratificationAlgorithmValue', builtin___int)
    type___MaxSatStratificationAlgorithmValue = MaxSatStratificationAlgorithmValue
    MaxSatStratificationAlgorithm: _MaxSatStratificationAlgorithm
    class _MaxSatStratificationAlgorithm(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.MaxSatStratificationAlgorithmValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        STRATIFICATION_NONE = typing___cast(SatParameters.MaxSatStratificationAlgorithmValue, 0)
        STRATIFICATION_DESCENT = typing___cast(SatParameters.MaxSatStratificationAlgorithmValue, 1)
        STRATIFICATION_ASCENT = typing___cast(SatParameters.MaxSatStratificationAlgorithmValue, 2)
    STRATIFICATION_NONE = typing___cast(SatParameters.MaxSatStratificationAlgorithmValue, 0)
    STRATIFICATION_DESCENT = typing___cast(SatParameters.MaxSatStratificationAlgorithmValue, 1)
    STRATIFICATION_ASCENT = typing___cast(SatParameters.MaxSatStratificationAlgorithmValue, 2)
    type___MaxSatStratificationAlgorithm = MaxSatStratificationAlgorithm

    SearchBranchingValue = typing___NewType('SearchBranchingValue', builtin___int)
    type___SearchBranchingValue = SearchBranchingValue
    SearchBranching: _SearchBranching
    class _SearchBranching(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.SearchBranchingValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        AUTOMATIC_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 0)
        FIXED_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 1)
        PORTFOLIO_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 2)
        LP_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 3)
        PSEUDO_COST_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 4)
        PORTFOLIO_WITH_QUICK_RESTART_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 5)
        HINT_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 6)
    AUTOMATIC_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 0)
    FIXED_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 1)
    PORTFOLIO_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 2)
    LP_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 3)
    PSEUDO_COST_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 4)
    PORTFOLIO_WITH_QUICK_RESTART_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 5)
    HINT_SEARCH = typing___cast(SatParameters.SearchBranchingValue, 6)
    type___SearchBranching = SearchBranching

    FPRoundingMethodValue = typing___NewType('FPRoundingMethodValue', builtin___int)
    type___FPRoundingMethodValue = FPRoundingMethodValue
    FPRoundingMethod: _FPRoundingMethod
    class _FPRoundingMethod(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SatParameters.FPRoundingMethodValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NEAREST_INTEGER = typing___cast(SatParameters.FPRoundingMethodValue, 0)
        LOCK_BASED = typing___cast(SatParameters.FPRoundingMethodValue, 1)
        ACTIVE_LOCK_BASED = typing___cast(SatParameters.FPRoundingMethodValue, 3)
        PROPAGATION_ASSISTED = typing___cast(SatParameters.FPRoundingMethodValue, 2)
    NEAREST_INTEGER = typing___cast(SatParameters.FPRoundingMethodValue, 0)
    LOCK_BASED = typing___cast(SatParameters.FPRoundingMethodValue, 1)
    ACTIVE_LOCK_BASED = typing___cast(SatParameters.FPRoundingMethodValue, 3)
    PROPAGATION_ASSISTED = typing___cast(SatParameters.FPRoundingMethodValue, 2)
    type___FPRoundingMethod = FPRoundingMethod

    name: typing___Text = ...
    preferred_variable_order: type___SatParameters.VariableOrderValue = ...
    initial_polarity: type___SatParameters.PolarityValue = ...
    use_phase_saving: builtin___bool = ...
    polarity_rephase_increment: builtin___int = ...
    random_polarity_ratio: builtin___float = ...
    random_branches_ratio: builtin___float = ...
    use_erwa_heuristic: builtin___bool = ...
    initial_variables_activity: builtin___float = ...
    also_bump_variables_in_conflict_reasons: builtin___bool = ...
    minimization_algorithm: type___SatParameters.ConflictMinimizationAlgorithmValue = ...
    binary_minimization_algorithm: type___SatParameters.BinaryMinizationAlgorithmValue = ...
    subsumption_during_conflict_analysis: builtin___bool = ...
    clause_cleanup_period: builtin___int = ...
    clause_cleanup_target: builtin___int = ...
    clause_cleanup_protection: type___SatParameters.ClauseProtectionValue = ...
    clause_cleanup_lbd_bound: builtin___int = ...
    clause_cleanup_ordering: type___SatParameters.ClauseOrderingValue = ...
    pb_cleanup_increment: builtin___int = ...
    pb_cleanup_ratio: builtin___float = ...
    minimize_with_propagation_restart_period: builtin___int = ...
    minimize_with_propagation_num_decisions: builtin___int = ...
    variable_activity_decay: builtin___float = ...
    max_variable_activity_value: builtin___float = ...
    glucose_max_decay: builtin___float = ...
    glucose_decay_increment: builtin___float = ...
    glucose_decay_increment_period: builtin___int = ...
    clause_activity_decay: builtin___float = ...
    max_clause_activity_value: builtin___float = ...
    restart_algorithms: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___SatParameters.RestartAlgorithmValue] = ...
    default_restart_algorithms: typing___Text = ...
    restart_period: builtin___int = ...
    restart_running_window_size: builtin___int = ...
    restart_dl_average_ratio: builtin___float = ...
    restart_lbd_average_ratio: builtin___float = ...
    use_blocking_restart: builtin___bool = ...
    blocking_restart_window_size: builtin___int = ...
    blocking_restart_multiplier: builtin___float = ...
    num_conflicts_before_strategy_changes: builtin___int = ...
    strategy_change_increase_ratio: builtin___float = ...
    max_time_in_seconds: builtin___float = ...
    max_deterministic_time: builtin___float = ...
    max_number_of_conflicts: builtin___int = ...
    max_memory_in_mb: builtin___int = ...
    absolute_gap_limit: builtin___float = ...
    relative_gap_limit: builtin___float = ...
    treat_binary_clauses_separately: builtin___bool = ...
    random_seed: builtin___int = ...
    log_search_progress: builtin___bool = ...
    use_pb_resolution: builtin___bool = ...
    minimize_reduction_during_pb_resolution: builtin___bool = ...
    count_assumption_levels_in_lbd: builtin___bool = ...
    presolve_bve_threshold: builtin___int = ...
    presolve_bve_clause_weight: builtin___int = ...
    presolve_probing_deterministic_time_limit: builtin___float = ...
    presolve_blocked_clause: builtin___bool = ...
    presolve_use_bva: builtin___bool = ...
    presolve_bva_threshold: builtin___int = ...
    max_presolve_iterations: builtin___int = ...
    cp_model_presolve: builtin___bool = ...
    cp_model_postsolve_with_full_solver: builtin___bool = ...
    cp_model_max_num_presolve_operations: builtin___int = ...
    cp_model_probing_level: builtin___int = ...
    cp_model_use_sat_presolve: builtin___bool = ...
    use_sat_inprocessing: builtin___bool = ...
    expand_element_constraints: builtin___bool = ...
    expand_automaton_constraints: builtin___bool = ...
    expand_table_constraints: builtin___bool = ...
    expand_alldiff_constraints: builtin___bool = ...
    merge_no_overlap_work_limit: builtin___float = ...
    merge_at_most_one_work_limit: builtin___float = ...
    presolve_substitution_level: builtin___int = ...
    presolve_extract_integer_enforcement: builtin___bool = ...
    use_optimization_hints: builtin___bool = ...
    minimize_core: builtin___bool = ...
    find_multiple_cores: builtin___bool = ...
    cover_optimization: builtin___bool = ...
    max_sat_assumption_order: type___SatParameters.MaxSatAssumptionOrderValue = ...
    max_sat_reverse_assumption_order: builtin___bool = ...
    max_sat_stratification: type___SatParameters.MaxSatStratificationAlgorithmValue = ...
    use_precedences_in_disjunctive_constraint: builtin___bool = ...
    use_overload_checker_in_cumulative_constraint: builtin___bool = ...
    use_timetable_edge_finding_in_cumulative_constraint: builtin___bool = ...
    use_disjunctive_constraint_in_cumulative_constraint: builtin___bool = ...
    linearization_level: builtin___int = ...
    boolean_encoding_level: builtin___int = ...
    max_num_cuts: builtin___int = ...
    only_add_cuts_at_level_zero: builtin___bool = ...
    add_knapsack_cuts: builtin___bool = ...
    add_cg_cuts: builtin___bool = ...
    add_mir_cuts: builtin___bool = ...
    add_zero_half_cuts: builtin___bool = ...
    add_clique_cuts: builtin___bool = ...
    max_all_diff_cut_size: builtin___int = ...
    add_lin_max_cuts: builtin___bool = ...
    max_integer_rounding_scaling: builtin___int = ...
    add_lp_constraints_lazily: builtin___bool = ...
    min_orthogonality_for_lp_constraints: builtin___float = ...
    max_cut_rounds_at_level_zero: builtin___int = ...
    max_consecutive_inactive_count: builtin___int = ...
    cut_max_active_count_value: builtin___float = ...
    cut_active_count_decay: builtin___float = ...
    cut_cleanup_target: builtin___int = ...
    new_constraints_batch_size: builtin___int = ...
    search_branching: type___SatParameters.SearchBranchingValue = ...
    hint_conflict_limit: builtin___int = ...
    repair_hint: builtin___bool = ...
    exploit_integer_lp_solution: builtin___bool = ...
    exploit_all_lp_solution: builtin___bool = ...
    exploit_best_solution: builtin___bool = ...
    exploit_relaxation_solution: builtin___bool = ...
    exploit_objective: builtin___bool = ...
    probing_period_at_root: builtin___int = ...
    use_probing_search: builtin___bool = ...
    pseudo_cost_reliability_threshold: builtin___int = ...
    optimize_with_core: builtin___bool = ...
    binary_search_num_conflicts: builtin___int = ...
    optimize_with_max_hs: builtin___bool = ...
    enumerate_all_solutions: builtin___bool = ...
    keep_all_feasible_solutions_in_presolve: builtin___bool = ...
    fill_tightened_domains_in_response: builtin___bool = ...
    instantiate_all_variables: builtin___bool = ...
    auto_detect_greater_than_at_least_one_of: builtin___bool = ...
    stop_after_first_solution: builtin___bool = ...
    stop_after_presolve: builtin___bool = ...
    num_search_workers: builtin___int = ...
    interleave_search: builtin___bool = ...
    interleave_batch_size: builtin___int = ...
    reduce_memory_usage_in_interleave_mode: builtin___bool = ...
    share_objective_bounds: builtin___bool = ...
    share_level_zero_bounds: builtin___bool = ...
    use_lns_only: builtin___bool = ...
    lns_focus_on_decision_variables: builtin___bool = ...
    use_rins_lns: builtin___bool = ...
    use_feasibility_pump: builtin___bool = ...
    fp_rounding: type___SatParameters.FPRoundingMethodValue = ...
    use_relaxation_lns: builtin___bool = ...
    diversify_lns_params: builtin___bool = ...
    randomize_search: builtin___bool = ...
    search_randomization_tolerance: builtin___int = ...
    use_optional_variables: builtin___bool = ...
    use_exact_lp_reason: builtin___bool = ...
    use_branching_in_lp: builtin___bool = ...
    use_combined_no_overlap: builtin___bool = ...
    catch_sigint_signal: builtin___bool = ...
    use_implied_bounds: builtin___bool = ...
    polish_lp_solution: builtin___bool = ...
    mip_max_bound: builtin___float = ...
    mip_var_scaling: builtin___float = ...
    mip_automatically_scale_variables: builtin___bool = ...
    mip_wanted_precision: builtin___float = ...
    mip_max_activity_exponent: builtin___int = ...
    mip_check_precision: builtin___float = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        preferred_variable_order : typing___Optional[type___SatParameters.VariableOrderValue] = None,
        initial_polarity : typing___Optional[type___SatParameters.PolarityValue] = None,
        use_phase_saving : typing___Optional[builtin___bool] = None,
        polarity_rephase_increment : typing___Optional[builtin___int] = None,
        random_polarity_ratio : typing___Optional[builtin___float] = None,
        random_branches_ratio : typing___Optional[builtin___float] = None,
        use_erwa_heuristic : typing___Optional[builtin___bool] = None,
        initial_variables_activity : typing___Optional[builtin___float] = None,
        also_bump_variables_in_conflict_reasons : typing___Optional[builtin___bool] = None,
        minimization_algorithm : typing___Optional[type___SatParameters.ConflictMinimizationAlgorithmValue] = None,
        binary_minimization_algorithm : typing___Optional[type___SatParameters.BinaryMinizationAlgorithmValue] = None,
        subsumption_during_conflict_analysis : typing___Optional[builtin___bool] = None,
        clause_cleanup_period : typing___Optional[builtin___int] = None,
        clause_cleanup_target : typing___Optional[builtin___int] = None,
        clause_cleanup_protection : typing___Optional[type___SatParameters.ClauseProtectionValue] = None,
        clause_cleanup_lbd_bound : typing___Optional[builtin___int] = None,
        clause_cleanup_ordering : typing___Optional[type___SatParameters.ClauseOrderingValue] = None,
        pb_cleanup_increment : typing___Optional[builtin___int] = None,
        pb_cleanup_ratio : typing___Optional[builtin___float] = None,
        minimize_with_propagation_restart_period : typing___Optional[builtin___int] = None,
        minimize_with_propagation_num_decisions : typing___Optional[builtin___int] = None,
        variable_activity_decay : typing___Optional[builtin___float] = None,
        max_variable_activity_value : typing___Optional[builtin___float] = None,
        glucose_max_decay : typing___Optional[builtin___float] = None,
        glucose_decay_increment : typing___Optional[builtin___float] = None,
        glucose_decay_increment_period : typing___Optional[builtin___int] = None,
        clause_activity_decay : typing___Optional[builtin___float] = None,
        max_clause_activity_value : typing___Optional[builtin___float] = None,
        restart_algorithms : typing___Optional[typing___Iterable[type___SatParameters.RestartAlgorithmValue]] = None,
        default_restart_algorithms : typing___Optional[typing___Text] = None,
        restart_period : typing___Optional[builtin___int] = None,
        restart_running_window_size : typing___Optional[builtin___int] = None,
        restart_dl_average_ratio : typing___Optional[builtin___float] = None,
        restart_lbd_average_ratio : typing___Optional[builtin___float] = None,
        use_blocking_restart : typing___Optional[builtin___bool] = None,
        blocking_restart_window_size : typing___Optional[builtin___int] = None,
        blocking_restart_multiplier : typing___Optional[builtin___float] = None,
        num_conflicts_before_strategy_changes : typing___Optional[builtin___int] = None,
        strategy_change_increase_ratio : typing___Optional[builtin___float] = None,
        max_time_in_seconds : typing___Optional[builtin___float] = None,
        max_deterministic_time : typing___Optional[builtin___float] = None,
        max_number_of_conflicts : typing___Optional[builtin___int] = None,
        max_memory_in_mb : typing___Optional[builtin___int] = None,
        absolute_gap_limit : typing___Optional[builtin___float] = None,
        relative_gap_limit : typing___Optional[builtin___float] = None,
        treat_binary_clauses_separately : typing___Optional[builtin___bool] = None,
        random_seed : typing___Optional[builtin___int] = None,
        log_search_progress : typing___Optional[builtin___bool] = None,
        use_pb_resolution : typing___Optional[builtin___bool] = None,
        minimize_reduction_during_pb_resolution : typing___Optional[builtin___bool] = None,
        count_assumption_levels_in_lbd : typing___Optional[builtin___bool] = None,
        presolve_bve_threshold : typing___Optional[builtin___int] = None,
        presolve_bve_clause_weight : typing___Optional[builtin___int] = None,
        presolve_probing_deterministic_time_limit : typing___Optional[builtin___float] = None,
        presolve_blocked_clause : typing___Optional[builtin___bool] = None,
        presolve_use_bva : typing___Optional[builtin___bool] = None,
        presolve_bva_threshold : typing___Optional[builtin___int] = None,
        max_presolve_iterations : typing___Optional[builtin___int] = None,
        cp_model_presolve : typing___Optional[builtin___bool] = None,
        cp_model_postsolve_with_full_solver : typing___Optional[builtin___bool] = None,
        cp_model_max_num_presolve_operations : typing___Optional[builtin___int] = None,
        cp_model_probing_level : typing___Optional[builtin___int] = None,
        cp_model_use_sat_presolve : typing___Optional[builtin___bool] = None,
        use_sat_inprocessing : typing___Optional[builtin___bool] = None,
        expand_element_constraints : typing___Optional[builtin___bool] = None,
        expand_automaton_constraints : typing___Optional[builtin___bool] = None,
        expand_table_constraints : typing___Optional[builtin___bool] = None,
        expand_alldiff_constraints : typing___Optional[builtin___bool] = None,
        merge_no_overlap_work_limit : typing___Optional[builtin___float] = None,
        merge_at_most_one_work_limit : typing___Optional[builtin___float] = None,
        presolve_substitution_level : typing___Optional[builtin___int] = None,
        presolve_extract_integer_enforcement : typing___Optional[builtin___bool] = None,
        use_optimization_hints : typing___Optional[builtin___bool] = None,
        minimize_core : typing___Optional[builtin___bool] = None,
        find_multiple_cores : typing___Optional[builtin___bool] = None,
        cover_optimization : typing___Optional[builtin___bool] = None,
        max_sat_assumption_order : typing___Optional[type___SatParameters.MaxSatAssumptionOrderValue] = None,
        max_sat_reverse_assumption_order : typing___Optional[builtin___bool] = None,
        max_sat_stratification : typing___Optional[type___SatParameters.MaxSatStratificationAlgorithmValue] = None,
        use_precedences_in_disjunctive_constraint : typing___Optional[builtin___bool] = None,
        use_overload_checker_in_cumulative_constraint : typing___Optional[builtin___bool] = None,
        use_timetable_edge_finding_in_cumulative_constraint : typing___Optional[builtin___bool] = None,
        use_disjunctive_constraint_in_cumulative_constraint : typing___Optional[builtin___bool] = None,
        linearization_level : typing___Optional[builtin___int] = None,
        boolean_encoding_level : typing___Optional[builtin___int] = None,
        max_num_cuts : typing___Optional[builtin___int] = None,
        only_add_cuts_at_level_zero : typing___Optional[builtin___bool] = None,
        add_knapsack_cuts : typing___Optional[builtin___bool] = None,
        add_cg_cuts : typing___Optional[builtin___bool] = None,
        add_mir_cuts : typing___Optional[builtin___bool] = None,
        add_zero_half_cuts : typing___Optional[builtin___bool] = None,
        add_clique_cuts : typing___Optional[builtin___bool] = None,
        max_all_diff_cut_size : typing___Optional[builtin___int] = None,
        add_lin_max_cuts : typing___Optional[builtin___bool] = None,
        max_integer_rounding_scaling : typing___Optional[builtin___int] = None,
        add_lp_constraints_lazily : typing___Optional[builtin___bool] = None,
        min_orthogonality_for_lp_constraints : typing___Optional[builtin___float] = None,
        max_cut_rounds_at_level_zero : typing___Optional[builtin___int] = None,
        max_consecutive_inactive_count : typing___Optional[builtin___int] = None,
        cut_max_active_count_value : typing___Optional[builtin___float] = None,
        cut_active_count_decay : typing___Optional[builtin___float] = None,
        cut_cleanup_target : typing___Optional[builtin___int] = None,
        new_constraints_batch_size : typing___Optional[builtin___int] = None,
        search_branching : typing___Optional[type___SatParameters.SearchBranchingValue] = None,
        hint_conflict_limit : typing___Optional[builtin___int] = None,
        repair_hint : typing___Optional[builtin___bool] = None,
        exploit_integer_lp_solution : typing___Optional[builtin___bool] = None,
        exploit_all_lp_solution : typing___Optional[builtin___bool] = None,
        exploit_best_solution : typing___Optional[builtin___bool] = None,
        exploit_relaxation_solution : typing___Optional[builtin___bool] = None,
        exploit_objective : typing___Optional[builtin___bool] = None,
        probing_period_at_root : typing___Optional[builtin___int] = None,
        use_probing_search : typing___Optional[builtin___bool] = None,
        pseudo_cost_reliability_threshold : typing___Optional[builtin___int] = None,
        optimize_with_core : typing___Optional[builtin___bool] = None,
        binary_search_num_conflicts : typing___Optional[builtin___int] = None,
        optimize_with_max_hs : typing___Optional[builtin___bool] = None,
        enumerate_all_solutions : typing___Optional[builtin___bool] = None,
        keep_all_feasible_solutions_in_presolve : typing___Optional[builtin___bool] = None,
        fill_tightened_domains_in_response : typing___Optional[builtin___bool] = None,
        instantiate_all_variables : typing___Optional[builtin___bool] = None,
        auto_detect_greater_than_at_least_one_of : typing___Optional[builtin___bool] = None,
        stop_after_first_solution : typing___Optional[builtin___bool] = None,
        stop_after_presolve : typing___Optional[builtin___bool] = None,
        num_search_workers : typing___Optional[builtin___int] = None,
        interleave_search : typing___Optional[builtin___bool] = None,
        interleave_batch_size : typing___Optional[builtin___int] = None,
        reduce_memory_usage_in_interleave_mode : typing___Optional[builtin___bool] = None,
        share_objective_bounds : typing___Optional[builtin___bool] = None,
        share_level_zero_bounds : typing___Optional[builtin___bool] = None,
        use_lns_only : typing___Optional[builtin___bool] = None,
        lns_focus_on_decision_variables : typing___Optional[builtin___bool] = None,
        use_rins_lns : typing___Optional[builtin___bool] = None,
        use_feasibility_pump : typing___Optional[builtin___bool] = None,
        fp_rounding : typing___Optional[type___SatParameters.FPRoundingMethodValue] = None,
        use_relaxation_lns : typing___Optional[builtin___bool] = None,
        diversify_lns_params : typing___Optional[builtin___bool] = None,
        randomize_search : typing___Optional[builtin___bool] = None,
        search_randomization_tolerance : typing___Optional[builtin___int] = None,
        use_optional_variables : typing___Optional[builtin___bool] = None,
        use_exact_lp_reason : typing___Optional[builtin___bool] = None,
        use_branching_in_lp : typing___Optional[builtin___bool] = None,
        use_combined_no_overlap : typing___Optional[builtin___bool] = None,
        catch_sigint_signal : typing___Optional[builtin___bool] = None,
        use_implied_bounds : typing___Optional[builtin___bool] = None,
        polish_lp_solution : typing___Optional[builtin___bool] = None,
        mip_max_bound : typing___Optional[builtin___float] = None,
        mip_var_scaling : typing___Optional[builtin___float] = None,
        mip_automatically_scale_variables : typing___Optional[builtin___bool] = None,
        mip_wanted_precision : typing___Optional[builtin___float] = None,
        mip_max_activity_exponent : typing___Optional[builtin___int] = None,
        mip_check_precision : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"absolute_gap_limit",b"absolute_gap_limit",u"add_cg_cuts",b"add_cg_cuts",u"add_clique_cuts",b"add_clique_cuts",u"add_knapsack_cuts",b"add_knapsack_cuts",u"add_lin_max_cuts",b"add_lin_max_cuts",u"add_lp_constraints_lazily",b"add_lp_constraints_lazily",u"add_mir_cuts",b"add_mir_cuts",u"add_zero_half_cuts",b"add_zero_half_cuts",u"also_bump_variables_in_conflict_reasons",b"also_bump_variables_in_conflict_reasons",u"auto_detect_greater_than_at_least_one_of",b"auto_detect_greater_than_at_least_one_of",u"binary_minimization_algorithm",b"binary_minimization_algorithm",u"binary_search_num_conflicts",b"binary_search_num_conflicts",u"blocking_restart_multiplier",b"blocking_restart_multiplier",u"blocking_restart_window_size",b"blocking_restart_window_size",u"boolean_encoding_level",b"boolean_encoding_level",u"catch_sigint_signal",b"catch_sigint_signal",u"clause_activity_decay",b"clause_activity_decay",u"clause_cleanup_lbd_bound",b"clause_cleanup_lbd_bound",u"clause_cleanup_ordering",b"clause_cleanup_ordering",u"clause_cleanup_period",b"clause_cleanup_period",u"clause_cleanup_protection",b"clause_cleanup_protection",u"clause_cleanup_target",b"clause_cleanup_target",u"count_assumption_levels_in_lbd",b"count_assumption_levels_in_lbd",u"cover_optimization",b"cover_optimization",u"cp_model_max_num_presolve_operations",b"cp_model_max_num_presolve_operations",u"cp_model_postsolve_with_full_solver",b"cp_model_postsolve_with_full_solver",u"cp_model_presolve",b"cp_model_presolve",u"cp_model_probing_level",b"cp_model_probing_level",u"cp_model_use_sat_presolve",b"cp_model_use_sat_presolve",u"cut_active_count_decay",b"cut_active_count_decay",u"cut_cleanup_target",b"cut_cleanup_target",u"cut_max_active_count_value",b"cut_max_active_count_value",u"default_restart_algorithms",b"default_restart_algorithms",u"diversify_lns_params",b"diversify_lns_params",u"enumerate_all_solutions",b"enumerate_all_solutions",u"expand_alldiff_constraints",b"expand_alldiff_constraints",u"expand_automaton_constraints",b"expand_automaton_constraints",u"expand_element_constraints",b"expand_element_constraints",u"expand_table_constraints",b"expand_table_constraints",u"exploit_all_lp_solution",b"exploit_all_lp_solution",u"exploit_best_solution",b"exploit_best_solution",u"exploit_integer_lp_solution",b"exploit_integer_lp_solution",u"exploit_objective",b"exploit_objective",u"exploit_relaxation_solution",b"exploit_relaxation_solution",u"fill_tightened_domains_in_response",b"fill_tightened_domains_in_response",u"find_multiple_cores",b"find_multiple_cores",u"fp_rounding",b"fp_rounding",u"glucose_decay_increment",b"glucose_decay_increment",u"glucose_decay_increment_period",b"glucose_decay_increment_period",u"glucose_max_decay",b"glucose_max_decay",u"hint_conflict_limit",b"hint_conflict_limit",u"initial_polarity",b"initial_polarity",u"initial_variables_activity",b"initial_variables_activity",u"instantiate_all_variables",b"instantiate_all_variables",u"interleave_batch_size",b"interleave_batch_size",u"interleave_search",b"interleave_search",u"keep_all_feasible_solutions_in_presolve",b"keep_all_feasible_solutions_in_presolve",u"linearization_level",b"linearization_level",u"lns_focus_on_decision_variables",b"lns_focus_on_decision_variables",u"log_search_progress",b"log_search_progress",u"max_all_diff_cut_size",b"max_all_diff_cut_size",u"max_clause_activity_value",b"max_clause_activity_value",u"max_consecutive_inactive_count",b"max_consecutive_inactive_count",u"max_cut_rounds_at_level_zero",b"max_cut_rounds_at_level_zero",u"max_deterministic_time",b"max_deterministic_time",u"max_integer_rounding_scaling",b"max_integer_rounding_scaling",u"max_memory_in_mb",b"max_memory_in_mb",u"max_num_cuts",b"max_num_cuts",u"max_number_of_conflicts",b"max_number_of_conflicts",u"max_presolve_iterations",b"max_presolve_iterations",u"max_sat_assumption_order",b"max_sat_assumption_order",u"max_sat_reverse_assumption_order",b"max_sat_reverse_assumption_order",u"max_sat_stratification",b"max_sat_stratification",u"max_time_in_seconds",b"max_time_in_seconds",u"max_variable_activity_value",b"max_variable_activity_value",u"merge_at_most_one_work_limit",b"merge_at_most_one_work_limit",u"merge_no_overlap_work_limit",b"merge_no_overlap_work_limit",u"min_orthogonality_for_lp_constraints",b"min_orthogonality_for_lp_constraints",u"minimization_algorithm",b"minimization_algorithm",u"minimize_core",b"minimize_core",u"minimize_reduction_during_pb_resolution",b"minimize_reduction_during_pb_resolution",u"minimize_with_propagation_num_decisions",b"minimize_with_propagation_num_decisions",u"minimize_with_propagation_restart_period",b"minimize_with_propagation_restart_period",u"mip_automatically_scale_variables",b"mip_automatically_scale_variables",u"mip_check_precision",b"mip_check_precision",u"mip_max_activity_exponent",b"mip_max_activity_exponent",u"mip_max_bound",b"mip_max_bound",u"mip_var_scaling",b"mip_var_scaling",u"mip_wanted_precision",b"mip_wanted_precision",u"name",b"name",u"new_constraints_batch_size",b"new_constraints_batch_size",u"num_conflicts_before_strategy_changes",b"num_conflicts_before_strategy_changes",u"num_search_workers",b"num_search_workers",u"only_add_cuts_at_level_zero",b"only_add_cuts_at_level_zero",u"optimize_with_core",b"optimize_with_core",u"optimize_with_max_hs",b"optimize_with_max_hs",u"pb_cleanup_increment",b"pb_cleanup_increment",u"pb_cleanup_ratio",b"pb_cleanup_ratio",u"polarity_rephase_increment",b"polarity_rephase_increment",u"polish_lp_solution",b"polish_lp_solution",u"preferred_variable_order",b"preferred_variable_order",u"presolve_blocked_clause",b"presolve_blocked_clause",u"presolve_bva_threshold",b"presolve_bva_threshold",u"presolve_bve_clause_weight",b"presolve_bve_clause_weight",u"presolve_bve_threshold",b"presolve_bve_threshold",u"presolve_extract_integer_enforcement",b"presolve_extract_integer_enforcement",u"presolve_probing_deterministic_time_limit",b"presolve_probing_deterministic_time_limit",u"presolve_substitution_level",b"presolve_substitution_level",u"presolve_use_bva",b"presolve_use_bva",u"probing_period_at_root",b"probing_period_at_root",u"pseudo_cost_reliability_threshold",b"pseudo_cost_reliability_threshold",u"random_branches_ratio",b"random_branches_ratio",u"random_polarity_ratio",b"random_polarity_ratio",u"random_seed",b"random_seed",u"randomize_search",b"randomize_search",u"reduce_memory_usage_in_interleave_mode",b"reduce_memory_usage_in_interleave_mode",u"relative_gap_limit",b"relative_gap_limit",u"repair_hint",b"repair_hint",u"restart_dl_average_ratio",b"restart_dl_average_ratio",u"restart_lbd_average_ratio",b"restart_lbd_average_ratio",u"restart_period",b"restart_period",u"restart_running_window_size",b"restart_running_window_size",u"search_branching",b"search_branching",u"search_randomization_tolerance",b"search_randomization_tolerance",u"share_level_zero_bounds",b"share_level_zero_bounds",u"share_objective_bounds",b"share_objective_bounds",u"stop_after_first_solution",b"stop_after_first_solution",u"stop_after_presolve",b"stop_after_presolve",u"strategy_change_increase_ratio",b"strategy_change_increase_ratio",u"subsumption_during_conflict_analysis",b"subsumption_during_conflict_analysis",u"treat_binary_clauses_separately",b"treat_binary_clauses_separately",u"use_blocking_restart",b"use_blocking_restart",u"use_branching_in_lp",b"use_branching_in_lp",u"use_combined_no_overlap",b"use_combined_no_overlap",u"use_disjunctive_constraint_in_cumulative_constraint",b"use_disjunctive_constraint_in_cumulative_constraint",u"use_erwa_heuristic",b"use_erwa_heuristic",u"use_exact_lp_reason",b"use_exact_lp_reason",u"use_feasibility_pump",b"use_feasibility_pump",u"use_implied_bounds",b"use_implied_bounds",u"use_lns_only",b"use_lns_only",u"use_optimization_hints",b"use_optimization_hints",u"use_optional_variables",b"use_optional_variables",u"use_overload_checker_in_cumulative_constraint",b"use_overload_checker_in_cumulative_constraint",u"use_pb_resolution",b"use_pb_resolution",u"use_phase_saving",b"use_phase_saving",u"use_precedences_in_disjunctive_constraint",b"use_precedences_in_disjunctive_constraint",u"use_probing_search",b"use_probing_search",u"use_relaxation_lns",b"use_relaxation_lns",u"use_rins_lns",b"use_rins_lns",u"use_sat_inprocessing",b"use_sat_inprocessing",u"use_timetable_edge_finding_in_cumulative_constraint",b"use_timetable_edge_finding_in_cumulative_constraint",u"variable_activity_decay",b"variable_activity_decay"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"absolute_gap_limit",b"absolute_gap_limit",u"add_cg_cuts",b"add_cg_cuts",u"add_clique_cuts",b"add_clique_cuts",u"add_knapsack_cuts",b"add_knapsack_cuts",u"add_lin_max_cuts",b"add_lin_max_cuts",u"add_lp_constraints_lazily",b"add_lp_constraints_lazily",u"add_mir_cuts",b"add_mir_cuts",u"add_zero_half_cuts",b"add_zero_half_cuts",u"also_bump_variables_in_conflict_reasons",b"also_bump_variables_in_conflict_reasons",u"auto_detect_greater_than_at_least_one_of",b"auto_detect_greater_than_at_least_one_of",u"binary_minimization_algorithm",b"binary_minimization_algorithm",u"binary_search_num_conflicts",b"binary_search_num_conflicts",u"blocking_restart_multiplier",b"blocking_restart_multiplier",u"blocking_restart_window_size",b"blocking_restart_window_size",u"boolean_encoding_level",b"boolean_encoding_level",u"catch_sigint_signal",b"catch_sigint_signal",u"clause_activity_decay",b"clause_activity_decay",u"clause_cleanup_lbd_bound",b"clause_cleanup_lbd_bound",u"clause_cleanup_ordering",b"clause_cleanup_ordering",u"clause_cleanup_period",b"clause_cleanup_period",u"clause_cleanup_protection",b"clause_cleanup_protection",u"clause_cleanup_target",b"clause_cleanup_target",u"count_assumption_levels_in_lbd",b"count_assumption_levels_in_lbd",u"cover_optimization",b"cover_optimization",u"cp_model_max_num_presolve_operations",b"cp_model_max_num_presolve_operations",u"cp_model_postsolve_with_full_solver",b"cp_model_postsolve_with_full_solver",u"cp_model_presolve",b"cp_model_presolve",u"cp_model_probing_level",b"cp_model_probing_level",u"cp_model_use_sat_presolve",b"cp_model_use_sat_presolve",u"cut_active_count_decay",b"cut_active_count_decay",u"cut_cleanup_target",b"cut_cleanup_target",u"cut_max_active_count_value",b"cut_max_active_count_value",u"default_restart_algorithms",b"default_restart_algorithms",u"diversify_lns_params",b"diversify_lns_params",u"enumerate_all_solutions",b"enumerate_all_solutions",u"expand_alldiff_constraints",b"expand_alldiff_constraints",u"expand_automaton_constraints",b"expand_automaton_constraints",u"expand_element_constraints",b"expand_element_constraints",u"expand_table_constraints",b"expand_table_constraints",u"exploit_all_lp_solution",b"exploit_all_lp_solution",u"exploit_best_solution",b"exploit_best_solution",u"exploit_integer_lp_solution",b"exploit_integer_lp_solution",u"exploit_objective",b"exploit_objective",u"exploit_relaxation_solution",b"exploit_relaxation_solution",u"fill_tightened_domains_in_response",b"fill_tightened_domains_in_response",u"find_multiple_cores",b"find_multiple_cores",u"fp_rounding",b"fp_rounding",u"glucose_decay_increment",b"glucose_decay_increment",u"glucose_decay_increment_period",b"glucose_decay_increment_period",u"glucose_max_decay",b"glucose_max_decay",u"hint_conflict_limit",b"hint_conflict_limit",u"initial_polarity",b"initial_polarity",u"initial_variables_activity",b"initial_variables_activity",u"instantiate_all_variables",b"instantiate_all_variables",u"interleave_batch_size",b"interleave_batch_size",u"interleave_search",b"interleave_search",u"keep_all_feasible_solutions_in_presolve",b"keep_all_feasible_solutions_in_presolve",u"linearization_level",b"linearization_level",u"lns_focus_on_decision_variables",b"lns_focus_on_decision_variables",u"log_search_progress",b"log_search_progress",u"max_all_diff_cut_size",b"max_all_diff_cut_size",u"max_clause_activity_value",b"max_clause_activity_value",u"max_consecutive_inactive_count",b"max_consecutive_inactive_count",u"max_cut_rounds_at_level_zero",b"max_cut_rounds_at_level_zero",u"max_deterministic_time",b"max_deterministic_time",u"max_integer_rounding_scaling",b"max_integer_rounding_scaling",u"max_memory_in_mb",b"max_memory_in_mb",u"max_num_cuts",b"max_num_cuts",u"max_number_of_conflicts",b"max_number_of_conflicts",u"max_presolve_iterations",b"max_presolve_iterations",u"max_sat_assumption_order",b"max_sat_assumption_order",u"max_sat_reverse_assumption_order",b"max_sat_reverse_assumption_order",u"max_sat_stratification",b"max_sat_stratification",u"max_time_in_seconds",b"max_time_in_seconds",u"max_variable_activity_value",b"max_variable_activity_value",u"merge_at_most_one_work_limit",b"merge_at_most_one_work_limit",u"merge_no_overlap_work_limit",b"merge_no_overlap_work_limit",u"min_orthogonality_for_lp_constraints",b"min_orthogonality_for_lp_constraints",u"minimization_algorithm",b"minimization_algorithm",u"minimize_core",b"minimize_core",u"minimize_reduction_during_pb_resolution",b"minimize_reduction_during_pb_resolution",u"minimize_with_propagation_num_decisions",b"minimize_with_propagation_num_decisions",u"minimize_with_propagation_restart_period",b"minimize_with_propagation_restart_period",u"mip_automatically_scale_variables",b"mip_automatically_scale_variables",u"mip_check_precision",b"mip_check_precision",u"mip_max_activity_exponent",b"mip_max_activity_exponent",u"mip_max_bound",b"mip_max_bound",u"mip_var_scaling",b"mip_var_scaling",u"mip_wanted_precision",b"mip_wanted_precision",u"name",b"name",u"new_constraints_batch_size",b"new_constraints_batch_size",u"num_conflicts_before_strategy_changes",b"num_conflicts_before_strategy_changes",u"num_search_workers",b"num_search_workers",u"only_add_cuts_at_level_zero",b"only_add_cuts_at_level_zero",u"optimize_with_core",b"optimize_with_core",u"optimize_with_max_hs",b"optimize_with_max_hs",u"pb_cleanup_increment",b"pb_cleanup_increment",u"pb_cleanup_ratio",b"pb_cleanup_ratio",u"polarity_rephase_increment",b"polarity_rephase_increment",u"polish_lp_solution",b"polish_lp_solution",u"preferred_variable_order",b"preferred_variable_order",u"presolve_blocked_clause",b"presolve_blocked_clause",u"presolve_bva_threshold",b"presolve_bva_threshold",u"presolve_bve_clause_weight",b"presolve_bve_clause_weight",u"presolve_bve_threshold",b"presolve_bve_threshold",u"presolve_extract_integer_enforcement",b"presolve_extract_integer_enforcement",u"presolve_probing_deterministic_time_limit",b"presolve_probing_deterministic_time_limit",u"presolve_substitution_level",b"presolve_substitution_level",u"presolve_use_bva",b"presolve_use_bva",u"probing_period_at_root",b"probing_period_at_root",u"pseudo_cost_reliability_threshold",b"pseudo_cost_reliability_threshold",u"random_branches_ratio",b"random_branches_ratio",u"random_polarity_ratio",b"random_polarity_ratio",u"random_seed",b"random_seed",u"randomize_search",b"randomize_search",u"reduce_memory_usage_in_interleave_mode",b"reduce_memory_usage_in_interleave_mode",u"relative_gap_limit",b"relative_gap_limit",u"repair_hint",b"repair_hint",u"restart_algorithms",b"restart_algorithms",u"restart_dl_average_ratio",b"restart_dl_average_ratio",u"restart_lbd_average_ratio",b"restart_lbd_average_ratio",u"restart_period",b"restart_period",u"restart_running_window_size",b"restart_running_window_size",u"search_branching",b"search_branching",u"search_randomization_tolerance",b"search_randomization_tolerance",u"share_level_zero_bounds",b"share_level_zero_bounds",u"share_objective_bounds",b"share_objective_bounds",u"stop_after_first_solution",b"stop_after_first_solution",u"stop_after_presolve",b"stop_after_presolve",u"strategy_change_increase_ratio",b"strategy_change_increase_ratio",u"subsumption_during_conflict_analysis",b"subsumption_during_conflict_analysis",u"treat_binary_clauses_separately",b"treat_binary_clauses_separately",u"use_blocking_restart",b"use_blocking_restart",u"use_branching_in_lp",b"use_branching_in_lp",u"use_combined_no_overlap",b"use_combined_no_overlap",u"use_disjunctive_constraint_in_cumulative_constraint",b"use_disjunctive_constraint_in_cumulative_constraint",u"use_erwa_heuristic",b"use_erwa_heuristic",u"use_exact_lp_reason",b"use_exact_lp_reason",u"use_feasibility_pump",b"use_feasibility_pump",u"use_implied_bounds",b"use_implied_bounds",u"use_lns_only",b"use_lns_only",u"use_optimization_hints",b"use_optimization_hints",u"use_optional_variables",b"use_optional_variables",u"use_overload_checker_in_cumulative_constraint",b"use_overload_checker_in_cumulative_constraint",u"use_pb_resolution",b"use_pb_resolution",u"use_phase_saving",b"use_phase_saving",u"use_precedences_in_disjunctive_constraint",b"use_precedences_in_disjunctive_constraint",u"use_probing_search",b"use_probing_search",u"use_relaxation_lns",b"use_relaxation_lns",u"use_rins_lns",b"use_rins_lns",u"use_sat_inprocessing",b"use_sat_inprocessing",u"use_timetable_edge_finding_in_cumulative_constraint",b"use_timetable_edge_finding_in_cumulative_constraint",u"variable_activity_decay",b"variable_activity_decay"]) -> None: ...
type___SatParameters = SatParameters
